#include "{{plugin_name}}.h"
#include <cuda_runtime.h>
#include <thread>
#include <stdio.h>
#include <nvfunctional>
#include <chrono>

#define BLOCKSIZE_X 16
#define BLOCKSIZE_Y 16

using namespace nvinfer1;
using namespace plugin;

__global__ void {{plugin_kernel_name}}({{plugin_kernel_params}})
{
    {{plugin_kernel_code}}
}

PluginFieldCollection {{plugin_name}}Creator::mFC{};
std::vector<PluginField> {{plugin_name}}Creator::mPluginAttributes;

int {{plugin_name}}::enqueue(int batchsize, const void *const *inputs, void **outputs, void* workspace, cudaStream_t stream) {
    dim3 dimBlock{{plugin_block_dim}};
    dim3 dimGrid{{plugin_grid_dim}};

    {{plugin_kernel_name}}<<<dimGrid, dimBlock, 0, stream>>>({{call_kernel_params}});
    return 0;
}

REGISTER_TENSORRT_PLUGIN({{plugin_name}}Creator);
